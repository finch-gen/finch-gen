name: docs

on: [push]

env:
  CRATE_NAME: finch-gen
  CRATE_UNDERSCORE: finch_gen

jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Checkout rustdoc-theme
      uses: actions/checkout@v2
      with:
        repository: finch-gen/rustdoc-theme
        path: rustdoc-theme

    - name: Run cargo fetch
      uses: actions-rs/cargo@v1
      with:
        command: fetch

    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: docs-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: docs-cargo-index-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: docs-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Build Docs
      uses: actions-rs/cargo@v1
      with:
        command: doc
        args: --release --lib --no-deps

    - name: Add index.html
      run: |
        cat >target/doc/index.html <<EOL
        ---
        layout: redirect
        destination: ${{ env.CRATE_UNDERSCORE }}
        ---
        EOL

    - name: Checkout website
      uses: actions/checkout@v2
      with:
        repository: finch-gen/finch-gen.github.io
        path: website
        ssh-key: ${{ secrets.WEBSITE_DEPLOY_KEY }}

    - name: Copy files to website
      run: |
        TAGORBRANCH=$(sed -e 's/refs\/tags\///g' -e 's/refs\/heads\///g' <<< "$GITHUB_REF")
        rm -rf website/reference/${{ env.CRATE_NAME }}/$TAGORBRANCH
        mkdir -p website/reference/${{ env.CRATE_NAME }}/$TAGORBRANCH
        cp -r target/doc/* website/reference/${{ env.CRATE_NAME }}/$TAGORBRANCH
      
    - name: Copy files to website latest
      if: contains(github.ref, 'tags')
      run: |
        rm -rf website/reference/${{ env.CRATE_NAME }}/latest
        mkdir -p website/reference/${{ env.CRATE_NAME }}/latest
        cp -r target/doc/* website/reference/${{ env.CRATE_NAME }}/latest

    - name: Push files
      run: |
        cd website
        node ensure-docs.js
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -A
        git diff-index --quiet HEAD || git commit -m "action: generate ${{ env.CRATE_NAME }} docs"
        git push origin master

    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: docs
        path: target/doc
